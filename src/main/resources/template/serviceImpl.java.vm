package ${package}.service.impl;

import ${package}.api.vo.req.Get${className}ListReq;
import ${package}.api.vo.req.${className}CreateReq;
import ${package}.api.vo.req.${className}UpdateReq;
import ${package}.api.vo.res.${className}DetailRes;
import ${package}.api.vo.res.Get${className}ListRes;
import ${package}.convert.${className}Converter;
import ${package}.bean.${className};
import ${package}.dao.${className}Mapper;
import ${package}.service.${className}Service;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;

/**
 * <p>
 * $!{comments} 服务实现类
 * </p>
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Service
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service  {

    /**
     * 转换器
     */
    ${className}Converter converter = ${className}Converter.CONVERTER;

    /**
     * 查询列表
     *
     * @param param 参数
     * @return {@link List}<{@link Get${className}ListRes}>
     */
    @Override
    public List<Get${className}ListRes> queryList(Get${className}ListReq param){
        return baseMapper.queryList(param);
    }

    /**
     * 新增
     *
     * @param param 新增参数
     * @return {@link Boolean}
     */
    @Transactional(rollbackFor = {Exception.class})
    @Override
    public Boolean save(${className}CreateReq param){
        ${className} ${secondModuleName} = converter.insertReqTo${className}(param);
        //TODO 新增逻辑填充
        return save(${secondModuleName});
    }

    /**
     * 新增
     *
     * @param param 修改参数
     * @return {@link Boolean}
     */
    @Transactional(rollbackFor = {Exception.class})
    @Override
    public Boolean update(${className}UpdateReq param){
        ${className} ${secondModuleName} = converter.updateReqTo${className}(param);
        //TODO 修改逻辑填充
        return updateById(${secondModuleName});
    }
}
