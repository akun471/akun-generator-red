package ${package}.controller;

import com.alibaba.fastjson.JSONObject;

import io.swagger.annotations.*;
import lombok.extern.slf4j.Slf4j;
import com.baomidou.mybatisplus.core.metadata.IPage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package}.api.dto.${className}ParamDto;
import ${package}.api.vo.${className}Vo;
import ${package}.api.vo.CommonResponse;
import ${package}.convert.${className}Converter;
import ${package}.entity.${className};
import ${package}.service.${className}Service;
/**
 * <p>
 * $!{comments} 前端控制器
 * </p>
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */

@RestController
@RequestMapping("${secondModuleName}")
@Slf4j
@Api(value = "${className}Controller", tags = {"${comments}操作接口"})
public class ${className}Controller extends BaseController<${className}> {

    /**
     * 转换器
     */
     ${className}Converter converter = ${className}Converter.CONVERTER;
    /**
     *  $!{comments}服务接口
     */
    private final ${className}Service ${secondModuleName}Service;

    /**
     * 构造函数
     */
    @Autowired
    public ${className}Controller(${className}Service ${secondModuleName}Service) {
        super.service = ${secondModuleName}Service;
        this.${secondModuleName}Service = ${secondModuleName}Service;
    }

    /**
     * 添加数据
     *
     * @param ${secondModuleName} 数据
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "增加${comments}", httpMethod = "POST")
    @RequestMapping(value = "add", method = RequestMethod.POST)
    public CommonResponse add${className}(@RequestBody ${className}ParamDto ${secondModuleName}) {
        return addModel(converter.to${className}(${secondModuleName}));
    }

    /**
     * 添加或更新数据
     *
     * @param ${secondModuleName} 数据
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "增加or修改${comments}", httpMethod = "POST")
    @RequestMapping(value = "addOrUpdate", method = RequestMethod.POST)
    public CommonResponse addOrUpdate(@RequestBody ${className}ParamDto ${secondModuleName}) {
        return addOrUpdateModel(converter.to${className}(${secondModuleName}));
    }

    /**
     * 编辑数据
     *
     * @param ${secondModuleName} 数据
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "编辑${comments}", httpMethod = "POST")
    @RequestMapping(value = "edit", method = RequestMethod.POST)
    public CommonResponse edit${className}(@RequestBody ${className}ParamDto ${secondModuleName}) {
        return editModel(converter.to${className}(${secondModuleName}));
    }

    /**
     * 按id删除
     *
     * @param id Id
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "删除${comments}", httpMethod = "GET")
    @RequestMapping(value = "delete/{id}", method = RequestMethod.GET)
    public CommonResponse delete${className}(@PathVariable("id") Integer id) {
        return removeById(id);
    }

    /**

     * 按id批量删除
     *
     * @param idAry ID字符串数组【,】拼接
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "批量删除${comments},[ , ]分割", httpMethod = "GET")
    @RequestMapping(value = "delete", method = RequestMethod.GET)
    public CommonResponse delete${className}(String idAry) {
        return removeBatchByIds(idAry);
    }

    /**
     * 获取全部数据
     *
     * @return {@link CommonResponse}
     */
    @ApiOperation(value = "查询所有${comments}", httpMethod = "GET")
    @RequestMapping(value = "getall", method = RequestMethod.GET)
    public CommonResponse<${className}Vo> getAll${className}() {
        return getAllModel();
    }

    /**
     * 分页获取
     *
     * @param jsonObject json对象
     * @return {@link CommonResponse<${className}Vo>}
     */
    @ApiOperation(value = "查询单页${comments}", httpMethod = "POST")
    @RequestMapping(value = "getpage", method = RequestMethod.POST)
    @ApiImplicitParam(name = "jsonObject", value = "分页查询参数模板--->\n" +
            "{  \"pageNo\": 1,\n" +
            "  \"pageSize\": 10,\n" +
            "  \"orderBy\": {\"desc\":\"col_name1,col_name2\",\"asc\":\"col_name1,col_name2\"},\n" +
            "\"col_name1\":\"value\",\n" +
            "\"col_name2\":\"value\"" +
            "}", required = true, paramType = "body", dataType = "string", example = "{}")
    public CommonResponse<IPage<${className}Vo>> getPage${className}(@RequestBody JSONObject jsonObject) {
        IPage page = getPage(jsonObject);
        page.setRecords(converter.to${className}Vos(page.getRecords()));
        return CommonResponse.success(page);
    }

    /**
     * 根据ID获取
     *
     * @param id id
     * @return {@link CommonResponse<${className}Vo>}
     */
    @ApiOperation(value = "根据ID获取${comments}实体", httpMethod = "GET")
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public CommonResponse<${className}Vo> getModelById(@PathVariable("id") Integer id) {
        return CommonResponse.success(converter.to${className}Vo(${secondModuleName}Service.getById(id)));
    }


}
