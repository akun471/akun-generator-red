package ${package}.api.vo.req;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Date;
import lombok.Data;
import lombok.experimental.Accessors;


/**
 * ${comments}修改参数对象
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Data
@Accessors(chain = true)
@ApiModel(value = "${className}UpdateReq",description= "${comments}修改参数对象")
public class ${className}UpdateReq implements Serializable {

    /**
     * 版本号
     */
	private static final long serialVersionUID=1L;
    /**
     * $pk.comments
     */
    @ApiModelProperty(value = "$pk.comments",name = "$pk.attrname")
    private $pk.attrType $pk.attrname;

#foreach ($column in $baseColumns)
#if($column.attrname != "createDate" && $column.attrname != "updateDate" && $column.attrname != "delFlag")
    /**
     * $column.comments
     */
    @ApiModelProperty(value = "$column.comments",name = "$column.attrname" ,required = true, position = $velocityCount)
#if($column.attrType != "String")
    @NotEmpty
#else
    @NotNull
#end
    private $column.attrType $column.attrname;
#end
#end
##
##	#foreach ($column in $columns)
##	/**
##	 * 设置：${column.comments}
##	 */
##	public void set${column.attrName}($column.attrType $column.attrname) {
##			this.$column.attrname = $column.attrname;
##			}
##	/**
##	 * 获取：${column.comments}
##	 */
##	public $column.attrType get${column.attrName}() {
##			return $column.attrname;
##			}
##	#end

##	@Override
##	public String toString() {
##	    return "${className}ParamDto{"+
###foreach ($column in $columns)
##	"${column.attrName}= "+$column.attrname+
###end
##		"}";}
}